FrooxEngine.LogiX.Locomotion.GetActiveLocomotionModule:####################################################
{
The <color=#00FF00>Get Active Locomotion Module</color> node outputs the input User's current locomotion module.
Usage

When a user is referenced, you can get the type of Locomotion the user is currently using. 
}



FrooxEngine.LogiX.Locomotion.InstallLocomotionModules:#####################################################
{
The <color=#00FF00>Install Locomotion Modules</color> node installs locomotion modules under the ModulesRoot slot hierarchy for use by the TargetUser when an impulse is received at Install.
Usage

The TargetUser input defaults to the local user.


The ClearExisting input determines whether all modules previously installed for the TargetUser are removed before installing new modules.


The OnInstalled fires an impulse when any locomotion modules under the ModulesRoot have been installed as a result of an impulse received at Install. An impulse will not be fired if there is no valid ModulesRoot input. However, an impulse will be fired as long as there is a ModulesRoot, even if there are no locomtion module components under the hierarchy which can be installed. This impulse continues the impulse chain which arrived at Install.


When an impulse is received at Install, the ModulesRoot slot hierarchy is copied under the Locomotion Modules slot under the TargetUser's user root slot. Any locomotion module components under that hierarchy are then registered with that user's Locomotion Controller. This process does not check for duplicates before installing, so pulsing this node with the same ModulesRoot and TargetUser will install multiple copies of the same module. The name of an installed module in the context menu is taken from the name of the slot on which the module is present. 
}


FrooxEngine.LogiX.Physics.OnLocomotionGripEnd:#############################################################
{
The <color=#00FF00>On Grip End</color> node fires an impulse when a user stops gripping the input Grip.
Usage

The Grip input takes a reference to a LocomotionGrip component.


The OnEvent output fires an impulse when the Grip stops being gripped by a user. Impulses are owned by the user who released the Grip component.


The Module output provides the locomotion module in use by the user who released the Grip component. This value is only available for the duration of the impulse chain started by OnEvent.


The GrippingBodyNode output provides a BodyNode enum value indicating which body node the Grip was released by. This will most likely be the Right Hand or Left Hand.

}


FrooxEngine.LogiX.Physics.OnGripStart:#####################################################################
{
The <color=#00FF00>On Grip Start</color> node fires an impulse when a user starts gripping the input Grip.
Usage

The Grip input takes a reference to a LocomotionGrip component.


The OnEvent output fires an impulse when the Grip starts being gripped by a user. Impulses are owned by the user who gripped the Grip component.


The Module output provides the locomotion module in use by the user who gripped the Grip component. This value is only available for the duration of the impulse chain started by OnEvent.


The GrippingBodyNode output provides a BodyNode enum value indicating which body node the Grip was gripped by. This will most likely be the Right Hand or Left Hand. 
}



FrooxEngine.LogiX.Physics.OnGripStay:######################################################################
{
The <color=#00FF00>On Grip Stay</color> node fires an impulse every frame while a user grips the input Grip.
Usage

The Grip input takes a reference to a LocomotionGrip component.


The OnEvent output fires impulses while the Grip is gripped by a user. Impulses are owned by the user gripping the Grip component.


The Module output provides the locomotion module in use by the user gripping the Grip component. This value is only available for the duration of the impulse chain started by OnEvent.


The GrippingBodyNode output provides a BodyNode enum value indicating which body node the Grip is gripped by. This will most likely be the Right Hand or Left Hand.

}



FrooxEngine.LogiX.Physics.OnLocomotionGripBegin:###########################################################
{
The <color=#00FF00>On Locomotion Grip Begin</color> node fires impulses whenever the active user of the input Locomotion module starts gripping an object.
Usage

The OnEvent fires an impulse when a locomotion grip starts with the input Locomotion module. Impulses are owned by the user who performed the grip.


The GrippedSlot provides the slot which was gripped. This value is only available for the duration of the impulse chain started by OnEvent.


The GrippedPoint provides the global position of the point at which the grip occurred.


The GrippingHand provides a Chirality enum indicating which hand the grip was performed with.

}



FrooxEngine.LogiX.Physics.OnLocomotionGripBegin:##########################################################
{
The <color=#00FF00>On Locomotion Grip End</color> node fires impulses whenever the active user of the input Locomotion module stops gripping an object.
Usage

The OnEvent fires an impulse when a locomotion grip stops with the input Locomotion module. Impulses are owned by the user who released the grip.


The GrippedSlot provides the slot which was released from being gripped. This value is only available for the duration of the impulse chain started by OnEvent.


The GrippedPoint provides the global position of the point at which the grip was released.


The GrippingHand provides a Chirality enum indicating which hand the grip was released with.

}


FrooxEngine.LogiX.Locomotion.SwitchLocomotionModule:######################################################
{

The <color=#00FF00>Switch Locomotion Module</color> node switches the TargetUser's active locomotion module to one with a matching ModuleName when an impulse is received at Switch.

Usage

The TargetUser input defaults to the local user.


The ModuleName input specifies which locomotion module should be switched to. For the standard locomotion module presets, use the relevant locale strings:

    Locomotion.Noclip.Name
    Locomotion.Teleport.Name
    Locomotion.Fly.Name
    Locomotion.WalkRun.Name
    Locomotion.WalkRunGripping.Name
    Locomotion.ZeroG.Name
    Locomotion.GrabWorld.Name
    Locomotion.Slide.Name

For custom locomotion modules, use the slot name under which the relevant component is present. e.g. if you have a customized PhysicalLocomotion preset on a slot called "Swim" then use Swim as the input string to ModuleName.


The ExactMatch controls whether only modules with exactly matching names will be used. Default is False.


The OnSwitched output fires an impulse when the TargetUser's locomotion is successfully switched as a result of an impulse received at Switch. An impulse will be fired as long as a valid match was detected even if it was the same as the user's already active module.


The OnNotFound output fires an impulse if no valid matching locomotion module can be found when an impulse is received at Switch. This may fire if:

    the ModuleName is null, empty or just a string composed of whitespace
    the user has no LocomotionController component (users will normally have one of these!)
    there is no matching locomotion module given the ModuleName and ExactMatch values


Searching for valid locomotion modules is performed on the modules referenced in the TargetUser's LocomotionController (present on their user root slot) in ascending index order. If there are two matches, the one with the lowest index will be used. No impulse will be fired from either OnSwitched or OnNotFound if the TargetUser input is not empty, but null. 

}




